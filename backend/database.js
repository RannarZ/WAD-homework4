// database.js
const Pool = require('pg').Pool;
const pool = new Pool({
    user: "postgres",
    password: "qwerty",
    database: "postgres",
    host: "localhost",
    port: "5432"
});
const execute = async (query) => {
    try {
        await pool.connect(); // gets connection
        await pool.query(query); // sends queries
        return true;
    } catch (error) {
        console.error(error.stack);
        return false;
    }
};

// A simple query that creates a table in our database
// Note that the "SERIAL"  pseudo-type that is used after the "id" is used to create a sequence object,
// and set the next value generated by the sequence as the default value for the column
const createTblQuery = `
    CREATE TABLE IF NOT EXISTS "POSTS" (
	    "ID" SERIAL PRIMARY KEY,         
	    "TITLE" VARCHAR(200) NOT NULL,
	    "BODY" VARCHAR(200) NOT NULL,
        "URLLINK" VARCHAR(200)  
    );`;

// A function to execute the previous query   
execute(createTblQuery).then(result => {
    if (result) {
        console.log('If does not exists, create the "POSTS" table');
    }
});

const createUserTblQuery = `
    CREATE TABLE IF NOT EXISTS "USERS" (
        "ID" SERIAL PRIMARY KEY,
        "EMAIL" VARCHAR(200) UNIQUE NOT NULL,
        "PASSWORD" VARCHAR(200) NOT NULL
    );`;

// Execute the query to create USERS table
execute(createUserTblQuery).then(result => {
    if (result) {
        console.log('If does not exist, create the "USERS" table');
    }
});


module.exports = pool;